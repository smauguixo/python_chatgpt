Estou usando o python com openpyxl. Como faço para popular um dicionário com chaves representando cada coluna da primeira linha de uma planilha?
===
Criei um dicionário 'v_unidades' com 4 chaves, cada uma representando uma coluna da planilha. Gostaria que durante a iteração mostrada abaixo, as linhas que não contemplassem a condição abaixo fossem atribuidas ao dicionario 'v_unidades'

# percorrendo as linhas da planilha UNIDADES e populando os dicionários
for row in unidades.iter_rows(min_row=2, max_row=unidades.max_row, values_only=True):
    if row[3] == "NAO_PERTENCE":
        v_unid_nao_pertence[row[1]] = row[3]
===
Criei um dicionário em branco 'v_unidades = {}' usando python openpyxl. Eu gostaria de iterar uma planilha 'unidades' com 4 colunas. A primeira linha deve como as 4 chaves do dicionário, e as linhas restantes devem ser 4 tuplas de valores respectivos a cada coluna.
===
O seguinte script salva apenas os valores da última linha no dicionário 'v_unidades'. Gostaria de concertar esse erro

#criação de dicionários
v_unid_nao_pertence = {} # armazenamento das unidades que não pertencem ao contrato
v_unidades = {}
v_consulta_pediatra_non_proc = {} # procedimentos "Nº CONSULTA PEDIATRA" a serem excluidos

keys = [cell.value for cell in unidades[1]]

# percorrendo as linhas da planilha UNIDADES e populando os dicionários
for row in unidades.iter_rows(min_row=2, max_row=unidades.max_row, values_only=True):
    if row[3] == "NAO_PERTENCE":
        v_unid_nao_pertence[row[1]] = row[3]
    if row[3] != "NAO_PERTENCE":
        # Criar uma lista de valores para esta linha
        values = [cell for cell in row]
        # Adicionar os valores à v_unidades como uma tupla
        v_unidades[keys[0]] = (values[0],)
        v_unidades[keys[1]] = (values[1],)
        v_unidades[keys[2]] = (values[2],)
        v_unidades[keys[3]] = (values[3],)
===
Criei um dicionário em branco 'v_unidades = {}' usando python openpyxl. Eu gostaria de iterar de uma só vez uma planilha 'unidades = stspe_data["UNIDADES"]' com 4 colunas. A primeira linha define as chaves do dicionário. célula A1 = chave[0], célula B1 = chave[1], célula C1 = chave[2] e célula D1 = chave[3]. Na segunda linha até o final, os valores da coluna A d
===
Eu gostaria de unir essas duas iterações em apenas uma única iteração, mantendo a lógica de que apenas as linhas que tiverem valor diferente de "NAO_PERTENCE" devam popular o dicionario 'v_unidades'

# percorrendo as linhas da planilha UNIDADES e populando os dicionários
for row in unidades.iter_rows(min_row=1, max_row=unidades.max_row, values_only=True):
    if row[3] == "NAO_PERTENCE":
        v_unid_nao_pertence[row[1]] = row[3]
#    if row[3] != "NAO_PERTENCE":

keys = [unidades.cell(1, i).value for i in range(1, 5)]
for i in range(2, unidades.max_row + 1):
    values = [unidades.cell(i, j).value for j in range(1, 5)]
    for j in range(4):
        if keys[j] not in v_unidades:
            v_unidades[keys[j]] = []
        v_unidades[keys[j]].append(values[j])
===
gostaria de transformar esse código em uma função que retornasse os dicionários populados:

keys = [unidades.cell(1, i).value for i in range(1, 5)]
for row in unidades.iter_rows(min_row=2, values_only=True):
    if row[3] != "NAO_PERTENCE":
        for i in range(4):
            if keys[i] not in v_unidades:
                v_unidades[keys[i]] = []
            v_unidades[keys[i]].append(row[i])
    else:
        v_unid_nao_pertence[row[1]] = row[3]
===
A seguinte linha "chaves_unidades = [unidades.cell(1, i).value for i in range(1, 5)]" percorre as 4 primeiras colunas da primeira linha de uma planilha e salva cada valor em 'chaves_unidades'. Como reescrever esse código para funcionar com qualquer número de colunas que já estejam populadas na planilha excel?